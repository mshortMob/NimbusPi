precision mediump float;
precision mediump int;

uniform float time;
uniform float brightness;
uniform float mousex;
uniform float mousey;


varying vec2 vUv;
uniform sampler2D maskTexture;

vec3 fx1(vec3 inCol){
    vec3 out1=inCol;
    out1=mix(out1, vec3(out1.g,out1.b,out1.r), mousex);
    return out1;
}

vec3 fx2(vec3 inCol){
    float offset=3.14*2./3.;
    vec3 out1=vec3( (sin(time*.5)+1.), (sin(time*.5+offset)+1.), (sin(time*.5+offset*2.)+1.) );
    if(mousey > .3) out1=mix(inCol, fract((inCol)*.5), mousey);
    if(mousey <= .3) out1=inCol;
    return out1;
}

void main( void ) {
        vec2 pos =vUv - vec2(0.5,0.5);
        //pos.y=pos.y*-1.;
	float vv = 10.*-sin(time*10.50+pos.x*0.5);
	vec3 p = vec3(pos.x, 0.2 , pos.y + 0.0);
	vec2 s = vec2(p.x/p.z*.75, p.y/p.z*12.0) * 0.05; 
	float c= sign((mod(s.x, 0.05) - 0.025) * (mod(s.y-time*0.1, 0.05) - 0.025));
	c *= max(0.3,p.z*p.z*32.0);
        vec3 mask = texture2D( maskTexture, vUv ).rgb;
	//(pos.y<=-.0) 
	//? gl_FragColor = vec4( vec3(abs(s.y*5.0*sin(time/4.1))*0.5,abs(s.y*9.4*sin(time/2.7))*0.5,0.3)+vec3((1.-c)*0.5+sin(time*0.6)*sin(time/3.7),c*0.5+sin(time*0.6)*sin(time/2.7),c*sin(time/4.1)),  mask.r*brightness)
	//: gl_FragColor = vec4( vec3(abs(s.y*5.0*sin(time/4.1))*0.5,abs(s.y*9.4*sin(time/2.7))*0.5,0.3), mask.r*brightness);	
	
        gl_FragColor = vec4( fx2(fx1(vec3(vec3(abs(s.y*5.0*sin(time/2.1))*0.5,abs(s.y*9.4*sin(time/1.7))*0.5,0.3)+vec3((1.-c)*0.5+sin(time*1.6)*sin(time/1.5),c*0.5+sin(time*1.8)*sin(time/2.7),c*sin(time/1.66)) ))),  mask.r*brightness);

}
