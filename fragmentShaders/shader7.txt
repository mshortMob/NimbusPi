precision mediump float;
precision mediump int;

uniform float time;
uniform float brightness;
uniform float mousex;
uniform float mousey;


varying vec2 vUv;
uniform sampler2D maskTexture;


vec3 getShader1(){
	vec2 position = ( -12.0 - (8.0 * -0.0 * abs(0.0))  ) * vUv;
	float red = abs( sin( position.x + time / .75) );
	float green = abs( sin( position.x + 3.14/2. + time / .75 ) );
	float blue = abs( sin( position.x + 3.14/5.5 + time / .75 ) );
	return vec3( blue*0., 1.2*(green-abs(0.0*mousey)), 2.0*blue);
}

vec3 getShader2(){
	vec2 p = ( -1.0 - (6.0 * abs(0.0*mousey))  )/2.0 - ( -1.0 - (6.0 * abs(0.0*mousey))  ) * vUv;

	for(int i=1;i<5;i++)
	{
		vec2 newp=p;
		float speed = 60.0+30.0; // speed control
		newp.x+=0.8/float(i)*sin(float(i)*p.y+time/(100.0/speed)+0.8*float(i))+1.0;
		newp.y+=0.8/float(i)*sin(float(i)*p.x+time/(100.0/speed)+0.3*float(i+10))-11.4;
		p=newp;
	}
	vec3 col=vec3( 0.0, sin(p.x*1.+p.y), 0.9*sin(12.0*p.y));
	return col;
}

void main()	{
	vec3 mask = texture2D( maskTexture, vUv ).rgb;
	gl_FragColor = vec4( mix( mix(getShader2(), getShader1()*getShader2(), mousex), getShader1()+getShader2()*mousex, mousey), mask.r*brightness );
}
