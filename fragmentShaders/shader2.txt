precision mediump float;
precision mediump int;

uniform float time;
uniform float brightness;
uniform float mousex;
uniform float mousey;

uniform float audioVolume;
varying vec2 vUv;
uniform sampler2D maskTexture;

vec3 hueRotate(vec3 colorIn){
    vec3 colorOut=mix(colorIn, vec3(colorIn.b*0.*mousey, colorIn.g*2., colorIn.r*2.), mousex );
    return colorOut;
}

void main( void ) {
    vec2 p = .625-1.25*vUv;
    vec3 destColor = vec3(1.0, 0.5, 0.7);
    float f = 0.0;
    for(float i = 0.0; i < 4.0; i++){
        float s = sin(time + i * 3.14/2.) * mousex*1.;
        float c = cos(time + i * 3.14/2.) * mousey*1.;
        f += 0.003 / abs(length(p + vec2(c, s)) - 0.5);
    }

    vec3 mask = texture2D( maskTexture, vUv ).rgb;
    gl_FragColor = vec4( hueRotate(vec3(destColor * f * 6.)), mask.r*brightness );
}
