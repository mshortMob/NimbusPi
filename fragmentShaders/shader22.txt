precision mediump float;
precision mediump int;

uniform float time;
uniform float brightness;
uniform float mousex;
uniform float mousey;

uniform float audioVolume;
varying vec2 vUv;
uniform sampler2D maskTexture;

#define ITERATIONS 4.0

vec3 fx1(vec3 inCol){
    float offset=3.14*2./3.;
    vec3 out1=vec3( (sin(time*1.5)+1.), (sin(time*1.5+offset)+1.), (sin(time*1.5+offset*2.)+1.) );
    out1=mix(inCol, inCol+out1, mousex);
    return out1;
}

vec3 fx2(vec3 inCol){
    float offset=3.14*2./3.;
    vec3 out1=vec3( (sin(time*1.5)+1.), (sin(time*1.5+offset)+1.), (sin(time*1.5+offset*2.)+1.) );
    out1=mix(inCol, inCol*out1, mousey);
    return out1;
}

void main() {
        vec2 p=gl_FragCoord.xy/70.;
	for(float i = 1.0; i < ITERATIONS; i++) {
		p.x += 1.0 / i * sin(time*0.2-i * p.y);
		p.y += 1.0 / i * cos(time*0.9+i * p.x*0.8);

	}
	vec3 col = vec3(sin(p.x*2.0), cos(p.y+p.x + time*0.9), sin(p.x*3.0));

	vec3 mask = texture2D( maskTexture, vUv ).rgb;
	gl_FragColor = vec4(fx2(fx1(col)),mask.r*brightness);
}