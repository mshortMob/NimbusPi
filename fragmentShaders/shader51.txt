precision mediump float;
precision mediump int;

uniform float time;
uniform float brightness;
uniform float mousex;
uniform float mousey;


varying vec2 vUv;
uniform sampler2D maskTexture;

vec3 fx1(vec3 inCol){
    vec3 out1=inCol;
    if (mousex > .2) out1=mix(out1, vec3(out1.r,out1.g,1.-out1.b)*.85, mousex);
    return out1;
}

vec3 fx2(vec3 inCol){
    vec3 out1=inCol;
    if (mousey > .3) out1=mix(out1, fract(out1*3.5), mousey);
    return out1;
}

void main() {
	vec2 p = .5-1.0*vUv*1.;
	float a = atan(p.x,p.y);
	float r = length(p*10.);
        float m = 3.5;
	r = (sin(abs(m*sin(0.5*r-time*.5)))) - .8*abs(sin(a*8.-time*0.0));
	r = fract((r*.8));
	vec4 green = vec4(0.0, 0.0 - r * 0.8, 0.0, 1.0);
	vec4 yellow = vec4( 1.0 - r * 0.1,  0.1,  1.0 - r * 0.8, 0.0);

        vec3 mask = texture2D( maskTexture, vUv ).rgb;
        vec4 temp= vec4(yellow + (yellow - green) * r/2.6);
        vec3 temp2=smoothstep(vec3(0.0, 0.0, 0.0), vec3(1.1, .5, .8), vec3(temp.r/2., temp.g*1.3, temp.b) );
        temp=vec4(1.0-temp2, temp.a);
	gl_FragColor = vec4(fx2(fx1(2.*vec3(temp.r,temp.g,temp.b))),1.0*brightness*((mask.r+mask.g+mask.b)/3.0));
}

	//(pos.y<=-.0) 
	//? gl_FragColor = vec4( vec3(abs(s.y*5.0*sin(time/4.1))*0.5,abs(s.y*9.4*sin(time/2.7))*0.5,0.3)+vec3((1.-c)*0.5+sin(time*0.6)*sin(time/3.7),c*0.5+sin(time*0.6)*sin(time/2.7),c*sin(time/4.1)),  ((mask.r+mask.g+mask.b)/3.0)*brightness)
	//:
