precision mediump float;
precision mediump int;

uniform float time;
uniform float brightness;
uniform float mousex;
uniform float mousey;


varying vec2 vUv;
uniform sampler2D maskTexture;

vec3 fx1(vec3 inCol){
    vec3 out1=inCol;
    if (mousex > .2) out1=mix(out1, vec3(out1.r,out1.g,1.-out1.b)*.5, mousex);
    return out1;
}

vec3 fx2(vec3 inCol){
    vec3 out1=inCol;
    if (mousey > .3) out1=mix(out1, fract(out1*4.), mousey/2.);
    return out1;
}


vec3 lungth(vec2 x,vec3 c){
       return vec3(length(x+c.r),length(x+c.g),length(c.b));
}

void main( void ) {
	
	vec2 position = .5-1.0*vUv;
	float th = atan(position.y, position.x) / (1.0 * 3.1415926);
	float dd = length(position) + 0.005;
	float d = 0.5 / dd + time/-1.5;
    	vec2 x =vUv;
    	vec3 c2=vec3(0,0,0);
    	x+sin(x.yx*sqrt(vec2(1,9)))/1.;
    	c2=lungth(sin(x*sqrt(vec2(3,43))),vec3(5,6,7)*0.0 * d);
	x+=sin(x.yx*sqrt(vec2(73,5)))/5.;
    	c2=2.*lungth(sin(time/-2.0+x*sqrt(vec2(33.,23.))),c2/9.);
    	x+=sin(x.yx*sqrt(vec2(93,7)))/3.;
    	c2=lungth(sin(x*sqrt(vec2(3.,1.))),c2/2.0);
    	c2=.5+.5*sin(c2*8.);
	
	vec3 uv = vec3(th + d, th - d, th + sin(d) * 0.45);
	float a = 0.5 + cos(uv.x * 3.1415926 * 2.0) * 0.5;
	float b = 0.5 + cos(uv.y * 3.1415926 * 2.0) * 0.5;
	float c = 0.5 + cos(uv.z * 3.1415926 * 6.0) * 0.5;
	vec3 color = 	mix(vec3(0.1, 0.5, 0.5), 	vec3(0.1, 0.1, 0.2),  pow(a, 0.2)) * 4.;
	color += 	mix(vec3(0.8, 0.2, 1.0), 	vec3(0.1, 0.1, 0.2),  pow(b, 0.1)) * 0.75;
	color += 	mix(c2, 			vec3(0.1, 0.0, 0.2),  pow(c, 0.1)) * 0.75;

        vec3 mask = texture2D( maskTexture, vUv ).rgb;
	gl_FragColor = vec4(  fx2(fx1(1.*vec3(color.r, color.g, color.b))), mask.r*brightness);
}
