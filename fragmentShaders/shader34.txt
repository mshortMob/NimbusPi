precision mediump float;
precision mediump int;

uniform float time;
uniform float brightness;
uniform float mousex;
uniform float mousey;

uniform float audioVolume;
varying vec2 vUv;
uniform sampler2D maskTexture;


const float PI = 3.14159;
const float N = 5.;

vec3 fx1(vec3 inCol){
    vec3 out1=inCol;
    out1=smoothstep(out1, vec3(0.), vec3(.2) );
    out1=vec3(out1.r+out1.g+out1.b);
    if(mousex > .2) out1=mix(inCol, vec3(inCol.g*4., inCol.b, inCol.r)*out1*1., mousex);
    if(mousex <= .2) out1=inCol;
    return out1;
}

vec3 fx2(vec3 inCol){
    vec3 out1=inCol;
    if(mousey > .3) out1=mix(inCol, fract(inCol), mousey);
    if(mousey <= .3) out1=inCol;
    return out1;
}

void main(){
	vec2 st = vUv*5.0-2.5;
	
	st *=  1.-length(4.0*st)+sin(time/2.5+st.y+st.x) ;
	st=st*st*vec2(-1.0, 1.0)+ vec2(2.5, 2.5);
	st.y*= .02;
	st.x*= .02;
	
	float brightness = 0.0;
	vec3 baseColor = vec3(0.2, 0.6, 0.8);
	float speed = time * 0.025;
	
	for (float i = 0.0;  i < N;  i++) {
		brightness += (0.005+mousex*.01) / abs(sin(PI * st.x) * sin(PI * st.y) * sin(PI * speed + floor(st.y)));
		brightness += (0.005+mousex*.05) / abs(sin(PI * st.y) * sin(PI * st.x) * sin(PI * speed + floor(st.x)));
	}

	vec3 mask = texture2D( maskTexture, vUv ).rgb;
	gl_FragColor = vec4(fx2(fx1(vec3(baseColor * brightness))), mask.r*brightness);
}